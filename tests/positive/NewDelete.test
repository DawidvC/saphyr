
@[4]int newArr(int val)
{
	auto p = new [4]int;
	for (int i = 0; i < 4; i++) {
		p[i] = val;
	}
	return p;
}

@[]int makeNew(int size)
{
	return new [size + 3]int;
}

void foo()
{
	auto x = makeNew(4);
	x[2] = 4;
}

void otherTypes(int size)
{
	auto a = new vec<3, int>;
	auto b = new [size]@int;
	auto c = new @(int)int;
}

int main()
{
	auto x = newArr(5);

	auto tmp = x[4];

	delete x;

	return tmp;
}

========

define [4 x i32]* @newArr(i32 %val) {
  %1 = alloca i32
  store i32 %val, i32* %1
  %2 = mul i64 4, 4
  %3 = call i8* @malloc(i64 %2)
  %4 = bitcast i8* %3 to [4 x i32]*
  %p = alloca [4 x i32]*
  store [4 x i32]* %4, [4 x i32]** %p
  %i = alloca i32
  store i32 0, i32* %i
  br label %5

; <label>:5                                       ; preds = %14, %0
  %6 = load i32* %i
  %7 = icmp slt i32 %6, 4
  br i1 %7, label %8, label %17

; <label>:8                                       ; preds = %5
  %9 = load i32* %i
  %10 = load [4 x i32]** %p
  %11 = sext i32 %9 to i64
  %12 = getelementptr [4 x i32]* %10, i32 0, i64 %11
  %13 = load i32* %1
  store i32 %13, i32* %12
  br label %14

; <label>:14                                      ; preds = %8
  %15 = load i32* %i
  %16 = add i32 %15, 1
  store i32 %16, i32* %i
  br label %5

; <label>:17                                      ; preds = %5
  %18 = load [4 x i32]** %p
  ret [4 x i32]* %18
}

declare i8* @malloc(i64)

define [0 x i32]* @makeNew(i32 %size) {
  %1 = alloca i32
  store i32 %size, i32* %1
  %2 = load i32* %1
  %3 = add i32 %2, 3
  %4 = sext i32 %3 to i64
  %5 = mul i64 4, %4
  %6 = call i8* @malloc(i64 %5)
  %7 = bitcast i8* %6 to [0 x i32]*
  ret [0 x i32]* %7
}

define void @foo() {
  %1 = call [0 x i32]* @makeNew(i32 4)
  %x = alloca [0 x i32]*
  store [0 x i32]* %1, [0 x i32]** %x
  %2 = load [0 x i32]** %x
  %3 = sext i32 2 to i64
  %4 = getelementptr [0 x i32]* %2, i32 0, i64 %3
  store i32 4, i32* %4
  ret void
}

define void @otherTypes(i32 %size) {
  %1 = alloca i32
  store i32 %size, i32* %1
  %2 = call i8* @malloc(i64 16)
  %3 = bitcast i8* %2 to <3 x i32>*
  %a = alloca <3 x i32>*
  store <3 x i32>* %3, <3 x i32>** %a
  %4 = load i32* %1
  %5 = sext i32 %4 to i64
  %6 = mul i64 8, %5
  %7 = call i8* @malloc(i64 %6)
  %8 = bitcast i8* %7 to [0 x i32*]*
  %b = alloca [0 x i32*]*
  store [0 x i32*]* %8, [0 x i32*]** %b
  %9 = call i8* @malloc(i64 8)
  %10 = bitcast i8* %9 to i32 (i32)**
  %c = alloca i32 (i32)**
  store i32 (i32)** %10, i32 (i32)*** %c
  ret void
}

define i32 @main() {
  %1 = call [4 x i32]* @newArr(i32 5)
  %x = alloca [4 x i32]*
  store [4 x i32]* %1, [4 x i32]** %x
  %2 = load [4 x i32]** %x
  %3 = sext i32 4 to i64
  %4 = getelementptr [4 x i32]* %2, i32 0, i64 %3
  %5 = load i32* %4
  %tmp = alloca i32
  store i32 %5, i32* %tmp
  %6 = load [4 x i32]** %x
  %7 = bitcast [4 x i32]* %6 to i8*
  call void @free(i8* %7)
  %8 = load i32* %tmp
  ret i32 %8
}

declare void @free(i8*)
